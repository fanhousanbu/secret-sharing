#!/usr/bin/env node

/**
 * Simulate GitHub Actions workflow for coverage reporting
 */

const { execSync } = require('child_process');
const fs = require('fs');

console.log('🧪 Simulating GitHub Actions workflow...\n');

try {
  // Step 1: Parse coverage data
  console.log('1. Parsing coverage data...');
  execSync('node scripts/parse-coverage.js', { stdio: 'inherit' });
  
  // Step 2: Read coverage data
  console.log('\n2. Reading coverage data...');
  const coverageData = JSON.parse(fs.readFileSync('coverage-data.json', 'utf8'));
  
  const statements = coverageData.statements;
  const branches = coverageData.branches;
  const functions = coverageData.functions;
  const lines = coverageData.lines;
  
  console.log('✅ Coverage data loaded:');
  console.log(`   Statements: ${statements}%`);
  console.log(`   Branches: ${branches}%`);
  console.log(`   Functions: ${functions}%`);
  console.log(`   Lines: ${lines}%`);
  
  // Step 3: Generate comment (simulate GitHub Actions)
  console.log('\n3. Generating PR comment...');
  
  const statementsNum = parseFloat(statements);
  const status = statementsNum >= 65 ? '✅' : '❌';
  
  const comment = `## 📊 Test Coverage Report

| Metric | Coverage | Threshold | Status |
|--------|----------|-----------|--------|
| **Statements** | ${statements}% | 65% | ${statementsNum >= 65 ? '✅' : '❌'} |
| **Branches** | ${branches}% | 50% | ${parseFloat(branches) >= 50 ? '✅' : '❌'} |
| **Functions** | ${functions}% | 55% | ${parseFloat(functions) >= 55 ? '✅' : '❌'} |
| **Lines** | ${lines}% | 65% | ${parseFloat(lines) >= 65 ? '✅' : '❌'} |

**Overall Status**: ${status} ${statementsNum >= 65 ? 'Coverage meets requirements' : 'Coverage below requirements'}

---
*This report is automatically generated by GitHub Actions*`;

  console.log('✅ Comment generated successfully:');
  console.log(comment);
  
  // Step 4: Verify thresholds
  console.log('\n4. Verifying coverage thresholds:');
  console.log(`   Statements: ${statements}% >= 65% → ${statementsNum >= 65 ? '✅ PASS' : '❌ FAIL'}`);
  console.log(`   Branches: ${branches}% >= 50% → ${parseFloat(branches) >= 50 ? '✅ PASS' : '❌ FAIL'}`);
  console.log(`   Functions: ${functions}% >= 55% → ${parseFloat(functions) >= 55 ? '✅ PASS' : '❌ FAIL'}`);
  console.log(`   Lines: ${lines}% >= 65% → ${parseFloat(lines) >= 65 ? '✅ PASS' : '❌ FAIL'}`);
  
  console.log('\n🎉 Workflow simulation completed successfully!');
  console.log('📊 Actual coverage values are now correctly parsed:');
  console.log(`   - Statements: ${statements}% (was showing 51.27% incorrectly)`);
  console.log(`   - Branches: ${branches}% (was showing 51.27% incorrectly)`);
  console.log(`   - Functions: ${functions}% (was showing 51.27% incorrectly)`);
  console.log(`   - Lines: ${lines}% (was showing 51.27% incorrectly)`);
  
} catch (error) {
  console.log('❌ Workflow simulation failed:', error.message);
  process.exit(1);
} 