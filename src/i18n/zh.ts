import { TranslationKey } from './types';

export const zh: TranslationKey = {
  // App component
  appTitle: '文件加密与秘密分享系统',
  appSubtitle: '基于 Shamir 秘密分享算法的安全文件分割与恢复工具',
  
  // Features
  featureSecureEncryption: '安全加密',
  featureSecureEncryptionDesc: '使用 AES-256-GCM 算法对文件进行强加密保护',
  featureSmartSplitting: '智能分割',
  featureSmartSplittingDesc: '将加密密钥分割成多个份额，分散存储提高安全性',
  featureFlexibleRecovery: '灵活恢复',
  featureFlexibleRecoveryDesc: '只需要部分份额即可恢复原文件，具有良好的容错性',
  
  // Tabs
  tabEncryption: '文件加密',
  tabRecovery: '文件恢复',
  
  // Footer
  footerOpenSource: '开源项目 • 基于 TypeScript 和 React',
  footerTechStack: '基于 TypeScript 和 React',
  footerDescription: '使用 Shamir 秘密分享算法实现安全的文件分割与恢复',
  
  // Common
  selectFile: '选择文件',
  fileName: '文件名',
  fileSize: '文件大小',
  password: '密码',
  confirmPassword: '确认密码',
  processing: '处理中',
  error: '错误',
  success: '成功',
  download: '下载',
  remove: '移除',
  optional: '可选',
  required: '必需',
  selectOrDrag: '点击选择文件或拖拽文件到此处',
  multipleSelection: '选择份额文件 (.json) - 可以选择多个',
  
  // File Encryption
  fileEncryption: '文件加密',
  fileEncryptionAndSplitting: '文件加密与分割',
  encryptionScheme: '加密方案',
  hybridScheme: '混合方案',
  hybridSchemeRecommended: '混合方案（推荐）',
  hybridSchemeDesc1: '• 文件用AES加密，只分割密钥',
  hybridSchemeDesc2: '• 存储效率高，处理速度快',
  hybridSchemeDesc3: '• 需要加密文件 + 足够份额',
  pureShamirScheme: '纯Shamir方案',
  pureShamirSchemeDesc1: '• 直接分割文件数据',
  pureShamirSchemeDesc2: '• 只需要足够份额即可恢复',
  pureShamirSchemeDesc3: '• 符合传统阈值加密理论',
  splittingConfig: '分割配置',
  totalShares: '总份额数 (n)',
  threshold: '阈值 (m)',
  shareDescription: '文件将被分成 {totalShares} 份，需要任意 {threshold} 份即可恢复',
  usePasswordProtection: '使用密码保护',
  usePasswordProtectionRecommended: '使用密码保护（推荐）',
  encryptionPassword: '加密密码',
  passwordPlaceholder: '请输入至少6位密码',
  confirmPasswordPlaceholder: '请再次输入密码',
  passwordSecurityNote1: '• 使用密码保护可以提供双重安全保障',
  passwordSecurityNote2: '• 即使有份额文件，没有密码也无法恢复文件',
  passwordSecurityNote3: '• 请务必记住密码，遗忘后无法恢复',
  noPasswordNote1: '• 不使用密码时，仅依靠份额文件进行保护',
  noPasswordNote2: '• 获得足够份额的人可以恢复文件',
  noPasswordNote3: '• 建议启用密码保护以提高安全性',
  pureShamirInfo: '纯Shamir方案特点：',
  pureShamirInfoDesc1: '• 直接分割文件数据，无需额外的加密文件',
  pureShamirInfoDesc2: '• 符合传统阈值秘密分享理论',
  pureShamirInfoDesc3: '• 可选择是否使用密码额外保护',
  pureShamirInfoDesc4: '• 获得足够份额{usePassword}的人可以恢复文件',
  startEncryption: '开始加密',
  encrypting: '正在加密...',
  encryptionComplete: '加密完成！',
  encryptionCompleteDesc1: '• 文件已成功加密并分割为 {totalShares} 份',
  encryptionCompleteDesc2: '• 需要加密文件 + 任意 {threshold} 份即可恢复原文件',
  encryptionCompleteDesc3: '• 请下载所有文件并妥善保管',
  fileSplittingComplete: '文件分割完成！',
  fileSplittingCompleteDesc1: '• 文件已直接分割为 {totalShares} 份',
  fileSplittingCompleteDesc2: '• 仅需要任意 {threshold} 份即可恢复原文件',
  fileSplittingCompleteDesc3: '• 无需额外的加密文件',
  viewFileFingerprint: '📋 查看文件指纹信息',
  fileSHA256Fingerprint: '文件SHA256指纹：',
  recordSHA256Note: '💡 请记录此SHA256值，在恢复文件时可以手动验证文件完整性。',
  downloadEncryptedFile: '下载加密文件',
  downloadShareFiles: '下载份额文件',
  downloadAll: '下载全部',
  
  // File Recovery
  fileRecovery: '文件恢复',
  selectEncryptedFile: '选择加密文件',
  hybridSchemeRequired: '（混合方案需要）',
  detectedScheme: '检测到的方案：',
  detectedSchemeHybrid: '混合方案',
  detectedSchemePureShamir: '纯Shamir方案',
  hybridSchemeRecoveryDesc: '需要加密文件和足够的份额文件来恢复原始文件',
  pureShamirRecoveryDesc: '只需要足够的份额文件{needsPassword}即可恢复原始文件，无需加密文件',
  selectShareFiles: '选择份额文件',
  pureShamirUploadNote: '纯Shamir方案需要上传足够数量的份额文件（通常是阈值数量）',
  selectedShareFiles: '已选择的份额文件：',
  filesCount: '{count} 个文件',
  pureShamirTip: '💡 提示：纯Shamir方案通常需要上传与阈值数量相同的份额文件',
  pureShamirTipDesc: '如果恢复失败，请尝试上传更多不同的份额文件',
  filePassword: '文件密码',
  passwordDetected: '• 检测到此文件使用了密码保护',
  passwordDetectedDesc: '• 请输入加密时设置的密码',
  pureShamirPasswordNote: '• 纯Shamir方案：密码与份额共同保护文件安全',
  passwordRequired: '请输入文件加密时使用的密码',
  passwordRequiredDesc: '此文件需要密码，请输入密码',
  startRecovery: '开始恢复',
  recovering: '正在恢复...',
  recoveryComplete: '恢复完成！',
  recoveryCompleteDesc1: '• 文件已成功恢复',
  recoveryCompleteDesc2: '• 原文件名: {filename}',
  recoveryCompleteDesc3: '• 使用了 {shareCount} 个份额文件',
  recoveryCompleteDesc4: '• 使用了加密文件: {encryptedFile}',
  recoveryCompleteDesc5: '• 恢复方案: {scheme}',
  verifyFileIntegrity: '💡 验证文件完整性',
  fileRecoveredNote: '文件已成功恢复。如果你有原始文件的SHA256值，可以在上方手动验证文件完整性。',
  recoveredFileSHA256: '恢复后文件SHA256：',
  verifySHA256Optional: '验证SHA256（可选）：',
  sha256Placeholder: '输入期望的SHA256值进行验证...',
  sha256VerificationPass: '✅ SHA256验证通过：文件完整性确认',
  sha256VerificationFail: '❌ SHA256验证失败：文件可能已损坏或被篡改',
  downloadRecoveredFile: '下载恢复的文件',
  downloadHashRecord: '下载哈希记录',
  
  // Errors
  errorSelectFile: '请选择要加密的文件',
  errorThresholdTooHigh: '阈值不能大于总份额数',
  errorThresholdTooLow: '阈值必须至少为2',
  errorPasswordRequired: '请输入密码',
  errorPasswordMismatch: '两次输入的密码不一致',
  errorPasswordTooShort: '密码长度至少6位',
  errorEncryptionFailed: '加密过程中发生错误',
  errorHybridNeedsEncrypted: '混合方案需要加密文件',
  errorAtLeastTwoShares: '至少需要2个份额文件',
  errorPasswordNeeded: '此文件需要密码，请输入密码',
  errorRecoveryFailed: '恢复过程中发生错误',
  }; 